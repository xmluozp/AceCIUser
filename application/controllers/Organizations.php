<?php


class Organizations extends CI_Controller {

	public function __construct()
	{
		parent::__construct();
		
		$this->load->database();
		$this->load->model('users_model');
		$this->load->model('organizations_model');
		
		$this->load->library('form_validation');

		$this->load->helper('form');
		$this->load->helper('url');
		
		$this->load->helper('User_email');
		$this->load->helper('User_variables');		
	}

	/**
	 * List all
	 */
	public function index()
	{
		$this->view_List_by_search();
	}

	/**
	 * view the list
	 */
	public function view_List_by_search($conditions = array())
	{
		$data['title'] = 'Organizations';
		$data['nav'] = get_nav();

		$this->load->view('users/inc_header', $data);
		$this->load->view('users/inc_navigation');
		$this->load->view('users/page_index_org', $data);
		$this->load->view('users/form_modal_org', $data);
		$this->load->view('users/inc_footer');
	}

	/**
	 * read to generate a data grid
	 */
	public function ajax_listPaging()
	{
		// grab getings
		$datatable_varibles = helper_datatable_varibles($this->input->get());

		// generate the JSON going to return to AJAX
		$returnAJAX = $this->organizations_model->read_datatable($datatable_varibles);

		echo json_encode($returnAJAX);
	}

	/**
	 * create organization
	 * for the admin-full-control purpose, the organization id will not be generated by MySql.
	 * instead of that, generated from AJAX
	 */
	public function ajax_create()
	{
		// get data
		$organization_id 	= $this->input->post('organization_id');
		$organization_name 	= $this->input->post('organization_name');

		$data = array(
			'organization_id'		  => $organization_id,
			'organization_name'		  => $organization_name,
		);

		$this->form_validation->set_data($data);
		$this->form_validation->set_rules('organization_name', 'name', 'required');
		$this->form_validation->set_rules('organization_id', 'id', 'required|is_unique['.TABLE_ORG.'.organization_id]');

		$validation_result = func_run_with_ajax($this->form_validation);
		
		if ($validation_result["success"] === TRUE)
		{
			// if valid, create new customer
			$this->organizations_model->create($data);
		}

		echo json_encode($validation_result);
	}

	/**
	 * AJAX update the customers's detail from ajax
	 */

	public function ajax_update()
	{
		// get data
		$organization_id 	= $this->input->post('organization_id');
		$organization_name 	= $this->input->post('organization_name');

		$data = array(
			'organization_id'		  => $organization_id,
			'organization_name'		  => $organization_name
		);

		// validation
		$this->form_validation->set_data($data);
		$this->form_validation->set_rules('organization_name', 'name', 'required');
		$this->form_validation->set_rules('organization_id', 'id', 'required');

		//================== above is codeigniter things==================
		$validation_result = func_run_with_ajax($this->form_validation);
		
		if ($validation_result["success"] === TRUE)
		{
			//=====================logo
			$config['upload_path']          = './'.UPLOAD_FOLDER;
			$config['allowed_types']        = 'gif|jpg|png';
			$config['max_size']             = LIMIT_UPLOAD_SIZE;
			$config['max_width']            = 0;
			$config['max_height']           = 0;
			$config['overwrite'] 			= TRUE;
			$config['encrypt_name'] 		= TRUE;
			$config['detect_mime'] 			= TRUE;

			$this->load->library('upload', $config);
			$isUploadSuccess = $this->upload->do_upload('organization_logo');
			$upload_data = $this->upload->data();
			
			$error = array('error' => $this->upload->display_errors());
						
			if($isUploadSuccess && $upload_data)
			{
				$config['height']   	 =  $upload_data["image_height"] > 35? 35: $upload_data["image_height"];
				$config['width']     	 = $upload_data["image_width"] > 200? 200: $upload_data["image_width"];;

				$config['image_library'] = 'gd2';
				$config['source_image'] = $upload_data['full_path'];
				$config['maintain_ratio'] = TRUE;
				$this->load->library('image_lib', $config);
				$this->image_lib->resize();
				$data["organization_logo"] = $upload_data["file_name"];

				// delete old logo
				$currentOrg = $this->organizations_model->read($organization_id);
				$oldPath = "./" .UPLOAD_FOLDER. "/". $currentOrg["organization_logo"];
				
				if(file_exists($oldPath) && !is_dir($oldPath)){
					$this->load->helper("file");
					unlink($oldPath);
				}					
			}
			//=====================logo
			
			// send the form to proccessing code
			$this->organizations_model->update($organization_id, $data);
		}

		echo json_encode($validation_result);
	}
	/**
	 * AJAX read one customers's data, return as JSON
	 */

	public function ajax_details()
	{
		$id = $this->input->post("id");

		$returnAJAX = $this->organizations_model->read_form($id);

		echo json_encode($returnAJAX);
	}

	public function ajax_generate_id()
	{
		echo  $this->organizations_model->read_generated_id();
	}

	public function ajax_delete()
	{
		$organization_id = $this->input->post('organization_id');

		// delete old logo
		$currentOrg = $this->organizations_model->read($organization_id);
		$oldPath = "./" .UPLOAD_FOLDER. "/". $currentOrg["organization_logo"];
						
		$this->organizations_model->delete($organization_id);
		
		if(file_exists($oldPath) && !is_dir($oldPath)){
			$this->load->helper("file");
			unlink($oldPath);
		}
	}

	public function ajax_temp_join()
	{
		$organization_id = $this->input->post('organization_id');

		$_SESSION['organization_id'] = $organization_id;

		echo 1;
	}

	public function func_cancel_visit()
	{
		$_SESSION['organization_id'] = $this->users_model->read_organization_id(get_user_id()) ;
		redirect(site_url("Organizations"), 'refresh');
	}

	// customized validations============================================
}
